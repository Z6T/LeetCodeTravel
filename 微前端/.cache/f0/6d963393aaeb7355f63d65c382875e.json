{"id":"single-spa-config.js","dependencies":[{"name":"/Users/blackwood/Miwork/私人工作空间/Sword-finger-offer/微前端/package.json","includedInParent":true,"mtime":1615862438656},{"name":"single-spa","loc":{"line":2,"column":27},"parent":"/Users/blackwood/Miwork/私人工作空间/Sword-finger-offer/微前端/single-spa-config.js","resolved":"/Users/blackwood/Miwork/私人工作空间/Sword-finger-offer/微前端/node_modules/single-spa/lib/esm/single-spa.min.js"},{"name":"_bundle_loader","parent":"/Users/blackwood/Miwork/私人工作空间/Sword-finger-offer/微前端/single-spa-config.js","resolved":"/Users/blackwood/.config/yarn/global/node_modules/parcel-bundler/src/builtins/bundle-loader.js"},{"name":"./app1/app1.js","dynamic":true,"loc":{"line":8,"column":25},"parent":"/Users/blackwood/Miwork/私人工作空间/Sword-finger-offer/微前端/single-spa-config.js","resolved":"/Users/blackwood/Miwork/私人工作空间/Sword-finger-offer/微前端/app1/app1.js"}],"generated":{"js":"\"use strict\";\n\nvar singleSpa = _interopRequireWildcard(require(\"single-spa\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar name = 'app1';\n/* loading 是一个返回 promise 的函数，用于 加载/解析 应用代码。\n * 它的目的是为延迟加载提供便利 —— single-spa 只有在需要时才会下载应用程序的代码。\n * 在这个示例中，在 webpack 中支持 import ()并返回 Promise，但是 single-spa 可以使用任何返回 Promise 的加载函数。\n */\n\nvar app = function app() {\n  return require(\"_bundle_loader\")(require.resolve('./app1/app1.js'));\n};\n/* Single-spa 配置顶级路由，以确定哪个应用程序对于指定 url 是活动的。\n * 您可以以任何您喜欢的方式实现此路由。\n * 一种有用的约定是在url前面加上活动应用程序的名称，以使顶层路由保持简单。\n */\n\n\nvar activeWhen = '/app1';\nsingleSpa.registerApplication({\n  name: name,\n  app: app,\n  activeWhen: activeWhen\n});\nsingleSpa.start();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"single-spa-config.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"single-spa-config.js","original":{"line":3,"column":0}},{"name":"name","generated":{"line":9,"column":4},"source":"single-spa-config.js","original":{"line":3,"column":6}},{"generated":{"line":9,"column":8},"source":"single-spa-config.js","original":{"line":3,"column":10}},{"generated":{"line":9,"column":11},"source":"single-spa-config.js","original":{"line":3,"column":13}},{"generated":{"line":9,"column":17},"source":"single-spa-config.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"single-spa-config.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"single-spa-config.js","original":{"line":8,"column":0}},{"name":"app","generated":{"line":15,"column":4},"source":"single-spa-config.js","original":{"line":8,"column":6}},{"generated":{"line":15,"column":7},"source":"single-spa-config.js","original":{"line":8,"column":9}},{"generated":{"line":15,"column":10},"source":"single-spa-config.js","original":{"line":8,"column":12}},{"name":"app","generated":{"line":15,"column":19},"source":"single-spa-config.js","original":{"line":8,"column":6}},{"generated":{"line":15,"column":22},"source":"single-spa-config.js","original":{"line":8,"column":12}},{"generated":{"line":16,"column":0},"source":"single-spa-config.js","original":{"line":8,"column":12}},{"generated":{"line":16,"column":9},"source":"single-spa-config.js","original":{"line":8,"column":18}},{"generated":{"line":16,"column":51},"source":"single-spa-config.js","original":{"line":8,"column":25}},{"generated":{"line":16,"column":67},"source":"single-spa-config.js","original":{"line":8,"column":18}},{"generated":{"line":16,"column":69},"source":"single-spa-config.js","original":{"line":8,"column":12}},{"generated":{"line":17,"column":0},"source":"single-spa-config.js","original":{"line":8,"column":12}},{"generated":{"line":17,"column":1},"source":"single-spa-config.js","original":{"line":8,"column":0}},{"generated":{"line":18,"column":0},"source":"single-spa-config.js","original":{"line":9,"column":0}},{"generated":{"line":24,"column":0},"source":"single-spa-config.js","original":{"line":13,"column":0}},{"name":"activeWhen","generated":{"line":24,"column":4},"source":"single-spa-config.js","original":{"line":13,"column":6}},{"generated":{"line":24,"column":14},"source":"single-spa-config.js","original":{"line":13,"column":16}},{"generated":{"line":24,"column":17},"source":"single-spa-config.js","original":{"line":13,"column":19}},{"generated":{"line":24,"column":24},"source":"single-spa-config.js","original":{"line":13,"column":0}},{"name":"singleSpa","generated":{"line":25,"column":0},"source":"single-spa-config.js","original":{"line":14,"column":0}},{"generated":{"line":25,"column":9},"source":"single-spa-config.js","original":{"line":14,"column":9}},{"name":"registerApplication","generated":{"line":25,"column":10},"source":"single-spa-config.js","original":{"line":14,"column":10}},{"generated":{"line":25,"column":29},"source":"single-spa-config.js","original":{"line":14,"column":0}},{"generated":{"line":25,"column":30},"source":"single-spa-config.js","original":{"line":14,"column":30}},{"name":"name","generated":{"line":26,"column":0},"source":"single-spa-config.js","original":{"line":14,"column":32}},{"name":"name","generated":{"line":26,"column":2},"source":"single-spa-config.js","original":{"line":14,"column":32}},{"generated":{"line":26,"column":6},"source":"single-spa-config.js","original":{"line":14,"column":36}},{"name":"name","generated":{"line":26,"column":8},"source":"single-spa-config.js","original":{"line":14,"column":32}},{"generated":{"line":26,"column":12},"source":"single-spa-config.js","original":{"line":14,"column":30}},{"name":"app","generated":{"line":27,"column":0},"source":"single-spa-config.js","original":{"line":14,"column":38}},{"name":"app","generated":{"line":27,"column":2},"source":"single-spa-config.js","original":{"line":14,"column":38}},{"generated":{"line":27,"column":5},"source":"single-spa-config.js","original":{"line":14,"column":41}},{"name":"app","generated":{"line":27,"column":7},"source":"single-spa-config.js","original":{"line":14,"column":38}},{"generated":{"line":27,"column":10},"source":"single-spa-config.js","original":{"line":14,"column":30}},{"name":"activeWhen","generated":{"line":28,"column":0},"source":"single-spa-config.js","original":{"line":14,"column":43}},{"name":"activeWhen","generated":{"line":28,"column":2},"source":"single-spa-config.js","original":{"line":14,"column":43}},{"generated":{"line":28,"column":12},"source":"single-spa-config.js","original":{"line":14,"column":53}},{"name":"activeWhen","generated":{"line":28,"column":14},"source":"single-spa-config.js","original":{"line":14,"column":43}},{"generated":{"line":29,"column":0},"source":"single-spa-config.js","original":{"line":14,"column":30}},{"generated":{"line":29,"column":1},"source":"single-spa-config.js","original":{"line":14,"column":0}},{"name":"singleSpa","generated":{"line":30,"column":0},"source":"single-spa-config.js","original":{"line":15,"column":0}},{"generated":{"line":30,"column":9},"source":"single-spa-config.js","original":{"line":15,"column":9}},{"name":"start","generated":{"line":30,"column":10},"source":"single-spa-config.js","original":{"line":15,"column":10}},{"generated":{"line":30,"column":15},"source":"single-spa-config.js","original":{"line":15,"column":0}}],"sources":{"single-spa-config.js":"\nimport * as singleSpa from 'single-spa';\nconst name = 'app1';\n/* loading 是一个返回 promise 的函数，用于 加载/解析 应用代码。\n * 它的目的是为延迟加载提供便利 —— single-spa 只有在需要时才会下载应用程序的代码。\n * 在这个示例中，在 webpack 中支持 import ()并返回 Promise，但是 single-spa 可以使用任何返回 Promise 的加载函数。\n */\nconst app = () => import('./app1/app1.js');\n/* Single-spa 配置顶级路由，以确定哪个应用程序对于指定 url 是活动的。\n * 您可以以任何您喜欢的方式实现此路由。\n * 一种有用的约定是在url前面加上活动应用程序的名称，以使顶层路由保持简单。\n */\nconst activeWhen = '/app1';\nsingleSpa.registerApplication({ name, app, activeWhen });\nsingleSpa.start();"},"lineCount":null}},"error":null,"hash":"9bba9838a95ebdf9a4f96e36c1e08c63","cacheData":{"env":{}}}